*&---------------------------------------------------------------------*
*& Report  ZPSFITSTFRC
*& Teste cad spl
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zpsfitstfrc MESSAGE-ID zfscd. "Comando message-id seta a classe de msg utilizada

INCLUDE zpsfitstfrc_top.

"Esta e a tela de seleção do relatório... ficou feio aqui, mas é para
"treinamento apenas
SELECTION-SCREEN BEGIN OF SCREEN 9999 AS SUBSCREEN.
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-005.
SELECT-OPTIONS: s_id FOR wa_scarr-carrid,
                s_name FOR wa_scarr-carrname.
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN END OF SCREEN 9999.

INITIALIZATION.


  CALL SCREEN 0100. "Aqui eu ja chamo a tela que tem os botões laterais...

*START-OF-SELECTION.
*  DATA: l_msg TYPE char20,
*        l_sy_sub TYPE string.
*
*  IF p_read = 'X'.
*
*    SELECT *
*      FROM zfrctst INTO TABLE t_zfrctst
*     WHERE codigo = p_codigo.
*
*    LOOP AT t_zfrctst INTO wa_zfrctst.
*      WRITE: wa_zfrctst-codigo, wa_zfrctst-nome, wa_zfrctst-id_fisc, wa_zfrctst-num_id.
*    ENDLOOP.
*
*
*  ELSEIF p_write = 'X'.
*
*    MOVE: p_codigo TO wa_zfrctst-codigo,
*          p_nome TO wa_zfrctst-nome,
*          p_id_fis TO wa_zfrctst-id_fisc,
*          p_num_id TO wa_zfrctst-num_id.
*
*    INSERT zfrctst FROM wa_zfrctst.
*    IF sy-subrc IS NOT INITIAL.
*      MOVE: sy-subrc TO l_sy_sub.
*      CONCATENATE 'Erro: sy-subrc = ' l_sy_sub INTO l_msg RESPECTING BLANKS.
*      MESSAGE e000(zfscd) WITH l_msg DISPLAY LIKE 'E'.
*    ELSE.
*      MESSAGE e000(zfscd) WITH 'Inserido com sucesso' DISPLAY LIKE 'S'.
*    ENDIF.
*  ENDIF.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
MODULE set_status OUTPUT.

  CASE g_tela.
    WHEN '0102'.
      SET PF-STATUS '0102'. " barra de status, menus e botões da tela do cadastro...
    WHEN '0103'.
      SET PF-STATUS '0103'. "Barra de status da tela 0103 (relatorio)
    WHEN OTHERS.
      SET PF-STATUS '0100'. " barra de status, menus e botões principal...
  ENDCASE.

  SET TITLEBAR '100' WITH text-003 sy-datum sy-timlo.

ENDMODULE.                 " STATUS_0100  OUTPUT


*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
MODULE user_command INPUT.

  CASE sy-ucomm. "Comando do botão de usuário...

    WHEN 'BACK' OR 'CANC' OR 'EXIT'. "Textos definidos no pf_status para cada botão
      LEAVE PROGRAM.

    WHEN 'RG'. "Botão resumo geral
      g_tela = '0101'. "Tela do resumo geral

    WHEN 'CA'. "Botão cadastrar
      g_tela = '0102'. "Tela do cadastro

    WHEN 'RE'. "Botão relatorio
      g_tela = '0103'. "Tela do relatório

    WHEN 'ADD'. "PopUp para adicionar cia aérea (botão adiciona na tela cadastro)
      PERFORM f_adiciona.

    WHEN OTHERS.

  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0100  INPUT

*&---------------------------------------------------------------------*
*&      Module  START_HTML_MENU  OUTPUT
*&---------------------------------------------------------------------*
MODULE start_html_menu OUTPUT.

*  Não consegui carregar a figura .gif pois não tenho acesso ao cadastro na smw0...
*  Então deixarei o container vazio e comentarei o código abaixo.



*  CHECK go_container IS INITIAL.
*
*  CREATE OBJECT go_container
*    EXPORTING
**    parent                      =
*      container_name              = 'CC_HTMLMENU'
**    style                       =
**    lifetime                    = lifetime_default
**    repid                       =
**    dynnr                       =
**    no_autodef_progid_dynnr     =
**  EXCEPTIONS
**    cntl_error                  = 1
**    cntl_system_error           = 2
**    create_error                = 3
**    lifetime_error              = 4
**    lifetime_dynpro_dynpro_link = 5
**    others                      = 6
*      .
*  IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*
*  CREATE OBJECT go_html
*    EXPORTING
**    shellstyle         =
*      parent             = go_container
**    lifetime           = LIFETIME_DEFAULT
**    saphtmlp           =
**    uiflag             =
**    name               =
**    saphttp            =
**    query_table_disabled = ''
**  EXCEPTIONS
**    cntl_error         = 1
**    cntl_install_error = 2
**    dp_install_error   = 3
**    dp_error           = 4
**    others             = 5
*      .
*  IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*
*  CALL METHOD go_html->set_ui_flag "Ajeita a borda do container html...
*    EXPORTING
*      uiflag     = 6
**  EXCEPTIONS
**    cntl_error = 1
**    others     = 2
*          .
*  IF sy-subrc <> 0.
** Implement suitable error handling here
*  ENDIF.
*
*
*  REFRESH gt_lhtml[].
*  APPEND '<html><body scroll="no" topmargin="0" bgcollor="DFX0F5" leftmargin="0">' TO gt_lhtml.
*  APPEND '<IMG SRC=IMAGEM align=center width=250 eigth=150>            ' TO gt_lhtml.
*  APPEND '</body></html>                                                         ' TO gt_lhtml.
*
*  CALL METHOD go_htmlx->load_mime_object "procura a figura no repositorio (cadastro via smw0)
*    EXPORTING
*      object_id            = '/ISDFPS/SDP_BW_LOGO' "Nome do objeto na smw0... não tenho acesso aqui.
*      object_url           = 'IMAGEM' "Aqui é o src do HTML
**  IMPORTING
**    assigned_url         =
**  EXCEPTIONS
**    object_not_found     = 1
**    dp_invalid_parameter = 2
**    dp_error_general     = 3
**    others               = 4
*          .
*  IF sy-subrc <> 0.
** Implement suitable error handling here
*  ENDIF.
*
*  CALL METHOD go_html->load_data "Carrega a figura para a variavel g_url... tem que cadastrar na smw0
**  EXPORTING
**    url                    =
**    type                   = 'text'
**    subtype                = 'html'
**    size                   = 0
**    encoding               =
**    charset                =
**    i_tidyt                =
**    needfiltering          = 0
**    language               =
*    IMPORTING
*      assigned_url           = g_url
*    CHANGING
*      data_table             = gt_lhtml
**    iscontentchanged       =
**  EXCEPTIONS
**    dp_invalid_parameter   = 1
**    dp_error_general       = 2
**    cntl_error             = 3
**    html_syntax_notcorrect = 4
**    others                 = 5
*          .
*  IF sy-subrc <> 0.
** Implement suitable error handling here
*  ENDIF.
*
*  CALL METHOD go_html->show_url
*    EXPORTING
*      url                    = g_url
**    frame                  =
**    in_place               = ' X'
**  EXCEPTIONS
**    cntl_error             = 1
**    cnht_error_not_allowed = 2
**    cnht_error_parameter   = 3
**    dp_error_general       = 4
**    others                 = 5
*          .
*  IF sy-subrc <> 0.
** Implement suitable error handling here
*  ENDIF.

ENDMODULE.                 " START_HTML_MENU  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  START_INITIAL_HTML_SCREEN  OUTPUT
*&---------------------------------------------------------------------*

MODULE start_initial_html_screen OUTPUT.

*Aqui, faria outro lance para carregar o html, mas como não deu certo,
*vou apenas criar um quadrinho com algum texto. rs.


ENDMODULE.                 " START_INITIAL_HTML_SCREEN  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  GET_DATA_0101  OUTPUT
*&---------------------------------------------------------------------*
MODULE get_data_0101 OUTPUT.

  "Tudo que é declarado dentro do module vira GLOBAL,
  "Então fazemos um perform para separar as coisas e deixar local...
  PERFORM get_data_0101.

ENDMODULE.                 " GET_DATA_0101  OUTPUT
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_0101
*&---------------------------------------------------------------------*
FORM get_data_0101 .
  DATA l_qtd TYPE i.

  IF t_scarr[] IS INITIAL.

    "Busco qtd registros
    SELECT COUNT( * ) INTO l_qtd FROM scarr.

    "Campo g_cp_qtd é declarado para referenciar o campo de tela de quantidade...
    "coloco o componente de tela com esse nome (no layout) e declaro uma variavel com mesmo nome.
    g_cp_qtd = l_qtd.
  ELSE.

    "Aqui, como ja temos uma tabela com todo os registros na tela de cadastro,
    "podemos buscar a quantidade sem fazer o select count(*)...
    DESCRIBE TABLE t_scarr LINES g_cp_qtd.
  ENDIF.

  "Busca o ultimo registro
  SELECT * INTO CORRESPONDING FIELDS OF wa_scarr FROM scarr
    ORDER BY carrid DESCENDING.
    EXIT.
  ENDSELECT.
  IF sy-subrc IS NOT INITIAL.
    MESSAGE s011 DISPLAY LIKE 'S'.
  ENDIF.

  g_ultimo_cad = wa_scarr-carrid.

ENDFORM.                    " GET_DATA_0101
*&---------------------------------------------------------------------*
*&      Module  GET_DATA_0102  OUTPUT
*&---------------------------------------------------------------------*
MODULE get_data_0102 OUTPUT.

  CHECK t_scarr[] IS INITIAL.

  SELECT * FROM scarr INTO TABLE t_scarr.

  SORT t_scarr BY carrid ASCENDING.


ENDMODULE.                 " GET_DATA_0102  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  TRATA_CAMPOS_TC  OUTPUT
*&---------------------------------------------------------------------*
MODULE trata_campos_tc OUTPUT.

  LOOP AT SCREEN. "percorre todos os elementos de tela

    "Bloqueamos todos os componentes de tela, menos o botão editar
    CASE screen-name.
      WHEN 'BT_EDIT'. "Quando for o botão de edição, deixa ativo...
      WHEN OTHERS. "os demais, fecha
        screen-input = 0. "poderia fazer isso tb pelo
    ENDCASE.

    MODIFY SCREEN. "Comando para confirmar modif. da tela.
  ENDLOOP.

ENDMODULE.                 " TRATA_CAMPOS_TC  OUTPUT
*&---------------------------------------------------------------------*
*&      Form  F_ADICIONA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_adiciona.

  "Chamada de tela popUp (Caixa de dialogo modal)...
  CALL SCREEN 0200 STARTING AT 10 10.

ENDFORM.                    " F_ADICIONA
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS '0200'.
  SET TITLEBAR 'Adicionar empresas aéreas'.

ENDMODULE.                 " STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.

  CASE sy-ucomm.
    WHEN 'BACK' OR 'EXIT' OR 'CANC'.
      "Como estou num popUp, não quero sair totalmente (com exit) e sim apenas fechar essa tela.
      SET SCREEN 0.
      LEAVE SCREEN.

    WHEN 'OK'. "Este é o OK do botao inserir...
      PERFORM f_check_ok. "Aqui vamos gravar no banco de dados
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_OK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_check_ok .

  IF scarr-carrid IS INITIAL "Caso usuario nao tenha informado alguma coisa
  OR scarr-carrname IS INITIAL.

    "Como setei o message-id la em cima, aqui ele sabe qual a classe...
    MESSAGE s190 DISPLAY LIKE 'E'. "da pau

    "Mas poderia colocar dessa outra forma...
    "MESSAGE s190(zfscd) DISPLAY LIKE 'E'. "da pau

    EXIT.
  ENDIF.

  IF g_edit = 'X'.
    MODIFY scarr FROM scarr.
  ELSE.
    "INSERT scarr. "Como foi declarada tables: scarr... só assim ele ja entende...
    insert scarr FROM scarr. "Ou poderia ser dessa outra forma.
  ENDIF.
  IF sy-subrc IS INITIAL.
    MESSAGE s033.

    IF g_edit IS INITIAL.
      "Aqui, insiro o registro criado na table control para nossa tela ficar tb atualizada
      APPEND scarr TO t_scarr.
    ELSE.
      "Modifico a tabela ligada ao table control para aparecer na tela
      MODIFY t_scarr FROM scarr
      TRANSPORTING carrname currcode url
       WHERE carrid = scarr-carrid.
    ENDIF.

    "Depois de fazer o append, ou dou um sort ou atualizo as linhas da table control, para que
    "a tela seja atualizada na hora... nesse caso, utilizei a atualização da TC (na tela 0102)
    "SORT t_scarr BY carrid ASCENDING.


  ELSE.
    MESSAGE s239 DISPLAY LIKE 'E'.
  ENDIF.

  SET SCREEN 0.
  LEAVE SCREEN.

ENDFORM.                    " F_CHECK_OK
*&---------------------------------------------------------------------*
*&      Module  GET_COD_CIA  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE get_cod_cia OUTPUT.
  DATA: l_num TYPE char02.

  "Caso esteja editando, não precisa buscar codigo
  CHECK g_edit IS INITIAL.

  "Configuramos um objeto de numeração (transação snro)
  "e aqui buscamos as numerações
  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr             = 'PK'
      object                  = 'ZTSTFRC'
      quantity                = '1'
      subobject               = ' '
      toyear                  = '0000'
      ignore_buffer           = ' '
    IMPORTING
      number                  = l_num
*     QUANTITY                =
*     RETURNCODE              =
    EXCEPTIONS
      interval_not_found      = 1
      number_range_not_intern = 2
      object_not_found        = 3
      quantity_is_0           = 4
      quantity_is_not_1       = 5
      interval_overflow       = 6
      buffer_overflow         = 7
      OTHERS                  = 8.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  COMPUTE scarr-carrid = l_num.


ENDMODULE.                 " GET_COD_CIA  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  UPDATE_TABLE_CONTROL  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE update_table_control OUTPUT.

  "Atualizo o numero de linhas table control com o numero de linhas da tabela interna...
  "Dessa forma, ao fazer o loop na table control, ele atualiza certinha a nossa tela.
  DESCRIBE TABLE t_scarr LINES tc_scarr-lines.

ENDMODULE.                 " UPDATE_TABLE_CONTROL  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND102  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command102 INPUT.

  CASE sy-ucomm.
    WHEN 'EDIT'. "Botão de edição da tela de cadastro

      PERFORM f_editar.

    WHEN OTHERS.
  ENDCASE.


ENDMODULE.                 " USER_COMMAND102  INPUT
*&---------------------------------------------------------------------*
*&      Form  F_EDITAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_editar .
  DATA: l_line TYPE i.

  "Busco a linha em que esta o cursor na table controle
  "Existe tambem o get filed (campo) e o get value (valor)
  GET CURSOR LINE l_line.

  "Não me pergunte por que precisa fazer esse ajuste na linha do cursor...
  l_line = l_line + tc_scarr-top_line - 1.

  "Busco os dados da linha que o usuario está com o cursor e jogo na tela da inserção
  CLEAR scarr.
  READ TABLE t_scarr INTO scarr INDEX l_line.

  "Seto essa variavel para que o programa atualize o registro e não busca novo código
  g_edit = 'X'.

  CALL SCREEN 0200 STARTING AT 10 10.

  CLEAR g_edit.



ENDFORM.                    " F_EDITAR
*&---------------------------------------------------------------------*
*&      Module  START_RELAT  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE start_alv_relat OUTPUT.

  "Caso não verifique, cada vez que passa aqui, cria outro objeto e não atualiza o que esta em tela.
  CHECK go_alv_container IS INITIAL.

  CREATE OBJECT go_alv_container
    EXPORTING
      container_name = 'CC_RELAT'. "Nome da tela


  CREATE OBJECT go_alv
    EXPORTING
      i_parent = go_alv_container.

  gs_layout-grid_title = 'Relatório de teste'.
  gs_layout-cwidth_opt = 'X'. "deixa a coluna do tamanho do que ta dentro dela

  CALL METHOD go_alv->set_table_for_first_display
    EXPORTING
      i_structure_name = 'SCARR'
      is_layout        = gs_layout
    CHANGING
      it_outtab        = t_scarr_alv.

ENDMODULE.                 " START_RELAT  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0103  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0103 INPUT.

  CASE sy-ucomm.
    WHEN 'EXIT' OR 'CANC' OR 'BACK'.
      EXIT.
    WHEN 'EXEC'.
      PERFORM f_exec_relat.
    WHEN OTHERS.
  ENDCASE.



ENDMODULE.                 " USER_COMMAND_0103  INPUT
*&---------------------------------------------------------------------*
*&      Form  F_EXEC_RELAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_exec_relat .

  CLEAR t_scarr_alv[].

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE t_scarr_alv
    FROM scarr
    WHERE carrid IN s_id "como é um select-options, utilizo como IN
  AND carrname IN s_name.


  gs_layout-zebra = 'X'. "Faz com que o grid fique zebrado

  "Para fazer a opção de ajuste de coluna funcionar (gs_layout-cwidth_opt = 'X')
  CALL METHOD go_alv->set_frontend_layout( gs_layout ).


  CALL METHOD go_alv->refresh_table_display. "Atualiza o ALV (se não não aparece)




ENDFORM.                    " F_EXEC_RELAT
